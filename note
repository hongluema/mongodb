NoSql（不支持sql的数据库）的优势：
    sql数据库的优势：
        实时一致性
        事物
        多表联合查询
   
    nosql数据库的优势(redis支持部分事物，mongodb不支持事物)：
        1. 灵活的数据模型，结构比后者更丰富，传统关系型数据库都是结构化的表，nosql可以是列式存储、key-value和文档存储；
        2. 更易扩展，像nosql数据库分分钟就可以添加一台新的服务器；
        3. NOSQL的优势易扩展NoSQL数据库种类繁多，但是一个共同的特点都是去掉关系数据库的关系型特性。数据之间无关系，这样就非常容易扩展。也无形之间，在架构的层面上带来了可扩展的能力。
        4. 高可用，查询效率高，传统关系型数据库受限于磁盘io，所以在高并发的情况下，压力倍增，而像redis这种nosql每秒支持10w次读写，主要例子有Redis，由于其逻辑简单，而且纯内存操作，使得其性能非常出色，单节点每秒可以处理超过10万次读写操作；
        5. 低廉的成本：这是大多数分布式数据库共有的特点，因为主要都是开源软件，没有昂贵的License成本;
 
    sql数据库的弊端：
        1. 扩展困难：由于存在类似Join这样多表查询机制，使得数据库在扩展方面很艰难，对表的定义、应用不够灵活，横向扩展比较困难;
        2. 读写慢：这种情况主要发生在数据量达到一定规模时由于关系型数据库的系统逻辑非常复杂，使得其非常容易发生死锁等的并发问题，所以导致其读写速度下滑非常严重;
        3. 成本高：企业级数据库的License价格很惊人，并且随着系统的规模，而不断上升;
        4. 有限的支撑容量：现有关系型解决方案还无法支撑Google这样海量的数据存储;

    nosql数据库的弊端：
        1. 不提供对SQL的支持：如果不支持SQL这样的工业标准，将会对用户产生一定的学习和应用迁移成本;
        2. 支持的特性不够丰富：现有产品所提供的功能都比较有限，大多数NoSQL数据库都不支持事务，也不像MS SQL Server和Oracle那样能提供各种附加功能，比如BI和报表等;
        3. 现有产品的不够成熟：大多数产品都还处于初创期，和关系型数据库几十年的完善不可同日而语;
   
 NoSQL 使用场景：
    NoSQL并不是任何场景，NoSQL都要优于关系型数据库。下面我们来具体聊聊，什么时候使用NoSQL比较给力：

        1) 数据库表schema经常变化

            比如在线商城，维护产品的属性经常要增加字段，这就意味着ORMapping层的代码和配置要改，如果该表的数据量过百万，新增字段会带来额外开销（重建索引等）。NoSQL应用在这种场景，可以极大提升DB的可伸缩性，开发人员可以将更多的精力放在业务层。

        2)数据库表字段是复杂数据类型

            对于复杂数据类型，比如SQL Sever提供了可扩展性的支持，像xml类型的字段。很多用过的同学应该知道，该字段不管是查询还是更改，效率非常一般。主要原因是是DB层对xml字段很难建高效索引，应用层又要做从字符流到dom的解析转换。NoSQL以json方式存储，提供了原生态的支持，在效率方便远远高于传统关系型数据库。

        3)高并发数据库请求

            此类应用常见于web2.0的网站，很多应用对于数据一致性要求很低，而关系型数据库的事务以及大表join反而成了”性能杀手”。在高并发情况下，sql与no-sql的性能对比由于环境和角度不同一直是存在争议的，并不是说在任何场景，no-sql总是会比sql快。有篇article和大家分享下，http://artur.ejsmont.org/blog/content/insert-performance-comparison-of-nosql-vs-sql-servers

        4)海量数据的分布式存储

            海量数据的存储如果选用大型商用数据，如Oracle，那么整个解决方案的成本是非常高的，要花很多钱在软硬件上。NoSQL分布式存储，可以部署在廉价的硬件上，是一个性价比非常高的解决方案。
 
 为什么选择mongodb：
    1. 无数据结构限制
        1）没有表结构的限制，每条记录都可以有完全不同的结构
        2）业务开发方便快捷
    2. 完全的索引查询
        1）redis的key-value只支持一种索引查询，就是按键查询，灵活性、使用范围和应用上受到一定的限制。mogodb支持单键索引、多键索引:{"x":1, "y":2}、数组索引:["apple", "car"]、全文索引:"i am a human（中文）"
            地理位置索引(2D)
    3. 方便的冗余和扩展
        1）复制集保证数据安全
        2）分片扩展数据规模
